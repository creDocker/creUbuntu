# This is a basic workflow to help you get started with Actions

name: dockerhub:2022.0

on:
  push:
    branches:
      - 'master'
  workflow_dispatch:
  schedule:
    # * is a special character in YAML so you have to quote this string 1:00  weekly,Saturday,1:00 #m h d/m m d/w 
    - cron:  '00 1 * * 6'


jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build for test
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile22
          push: true
          tags: tamboraorg/creubuntu:check22

      -
        name: Test
        run: |
          docker run tamboraorg/creubuntu:check22 /cre/ubuntu-test.sh  
      -
        name: Build and push
        id: docker_push
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile22
          push: true
          tags: tamboraorg/creubuntu:2022.0 

      -
        name: Trigger
        run: |
          curl -XPOST -u "${{ secrets.DOCKERHUB_USERNAME}}:${{secrets.DOCKERHUB_TOKEN}}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/creDocker/creGlue/dispatches --data '{"event_type": "dockerhub:2022.0"}' 


      -
        name: run Api
        run: |
          curl -u "${{ secrets.DOCKERHUB_USERNAME}}:${{secrets.DOCKERHUB_TOKEN}}" \
           -X POST \
           -H "Accept: application/vnd.github.v3+json" \
           https://api.github.com/repos/creDocker/creGlue/actions/workflows/docker2022.yml/dispatches \
           -d '{"ref": "master", 
              "inputs": {
                 "name": "trigger from api2",
                 "home": "test2"}
               }' 

  docker-run-action:
    runs-on: ubuntu-latest
    container:
      image: tamboraorg/creubuntu:2022.0
#      env:
#        NODE_ENV: development
#      ports:
#        - 80
      volumes:
#        - ${{ github.workspace }}/versions_2022.txt:/cre/versions_2022.txt
        - ${{ github.workspace }}/cre/versions:/cre/versions        
    steps:
      - uses: actions/checkout@v3
#        with:
#          ref: master
      - name: ls cre
        run: (ls -l /cre)
      - name: ls cre/versions
        run: (ls -l /cre/versions)        
      - name: cp version.txt
        run: (cp -T /cre/versions.txt /cre/versions/versions_2022.txt)
      - name: Submit changes       
        uses: EndBug/add-and-commit@v9
