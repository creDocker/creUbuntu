#!/bin/bash
# Current Container Name : {{ $CurrentContainer.Name }}

queue='cre.{{ $CurrentContainer.Name }}'
queue_length=-1

while getopts q: flag
do
    case "${flag}" in
        q) queue=${OPTARG};;
    esac
done	

if [ -z "$binding" ]
then
  binding=$queue
fi
																																																																																																		initQueue='{"exchange":"'$exchange'", "binding":"'$binding'", "queue":"'$queue'"}'

rabbitmq_host=''
{{ if $CurrentContainer.Env.RABBITMQ_QUEUE }}
 {{ range $rabbitmqServerPWD, $containers := groupByMulti $ "Env.RABBITMQ_ROOT_PWD" "," }}
  {{ range $index, $container := $containers }}
   {{ $rootPassword := or $container.Env.RABBITMQ_ROOT_PWD "_secret_" }}
   {{ $rabbitmqPort := or $container.Env.RABBITMQ_PORT "5672" }}
    rabbitmq_port='{{ $rabbitmqPort }}'
   {{ range $containerNetwork := $container.Networks }}
    rabbitmq_host='{{ $containerNetwork.IP }}'

   {{ if $CurrentContainer.Env.RABBITMQ_USER }}
   ## RABBITMQ_USER : {{ $CurrentContainer.Env.RABBITMQ_USER }}
   rabbit_user="{{ $CurrentContainer.Env.RABBITMQ_USER }}"
   {{ else }}
   ## NO USER: md5 of {{ $CurrentContainer.Env.RABBITMQ_QUEUE }}
   rabbit_user="U:$(printf '%s' '{{ $CurrentContainer.Env.RABBITMQ_QUEUE }}' | md5sum | cut -d ' ' -f 1)"
   rabbit_user="${rabbit_user:0:24}"
   {{ end }}
   {{ if $CurrentContainer.Env.RABBITMQ_PWD }}
   ## RABBITMQ_PWD : {{ $CurrentContainer.Env.RABBITMQ_PWD }}
   rabbit_pwd="{{ $CurrentContainer.Env.RABBITMQ_PWD }}"
   {{else}}
   rabbit_pwd="PWD:$(printf '%s' '$rabbit_user:{{sha1 $rootPassword}}' | md5sum | cut -d ' ' -f 1)"
   rabbit_pwd="${rabbit_pwd:0:32}"
   {{ end }}

   {{ end }}
  {{ end }} 
 {{ end }} 
{{ end }}


queue_length=$(curl -s -k -u admin:$root_password $rabbitmq_host:$rabbitmq_port/api/queues/%2F/$queue | jq '.messages')
if [ -z "$queue_length" ] then
  echo "Clear: queue $queue does not exist."
else
  while [ $queue_length -gt 0 ]
  do
    ## https://reposcope.com/man/en/1/amqp-get
    amqp-get --url=amqp://$rabbit_user:$rabbit_pwd@$rabbitmq_host:$rabbitmq_port -q "$queue" 
    sleep $(calc -d "0.1/$queue_length")
    #sleep 0.1
    queue_length=$(curl -s -k -u admin:$root_password $rabbitmq_host:$rabbitmq_port/api/queues/%2F/$queue | jq '.messages')
  done
fi


